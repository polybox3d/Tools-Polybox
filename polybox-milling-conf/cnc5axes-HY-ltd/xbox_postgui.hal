# Inclure vos commandes HAL personnalisées ici
# Les commandes contenues dans ce fichier seront lancées après quel'interface graphique AXIS (PyVCP inclus) aura démarré.


sets spindle-at-speed true


#Auto-Add by JoypadOverlay software. Remote joypad control
loadusr -W hal_input -KRAL X-Box

loadrt or2 count=2
loadrt mux4 count=1
loadrt sum2 count=5
loadrt mult2 count=3

addf or2.0 servo-thread
addf or2.1 servo-thread
addf mux4.0 servo-thread
addf sum2.0 servo-thread
addf sum2.1 servo-thread
addf sum2.2 servo-thread
addf sum2.3 servo-thread
addf sum2.4 servo-thread
addf mult2.0 servo-thread
addf mult2.1 servo-thread
addf mult2.2 servo-thread


#handle Z axis with 2 button. Release button start at -1 and end at 1 when fully-pressed...
setp sum2.0.in0  1.0
setp sum2.1.in0 1.0

net z-correct sum2.0.in1 input.0.abs-z-position
net zr-correct sum2.1.in1 input.0.abs-rz-position

#mult 1 axis by -1 to get neg value 
setp mult2.0.in0 -1.0
net z-neg-correct mult2.0.in1 sum2.0.out
net sum-z-1 sum2.2.in0 mult2.0.out
net sum-z-2 sum2.2.in1 sum2.1.out

setp mult2.1.in0 -1.0
net y-neg-correct mult2.1.in1 input.0.abs-y-position 

#y2 neg
setp mult2.2.in0 -1.0
net y2-neg-correct mult2.2.in1 input.0.abs-ry-position

#add x-y button
#x
net x-jog-1 sum2.3.in0  input.0.abs-x-position
net x-jog-2 sum2.3.in1  input.0.abs-hat0x-position
#y
net y-jog-1 sum2.4.in0  mult2.1.out
net y-jog-2 sum2.4.in1  mult2.2.out



setp halui.jog-speed 300


net joy-x-jog halui.jog.0.analog <= sum2.3.out
net joy-y-jog halui.jog.1.analog <= sum2.4.out
net joy-z-jog halui.jog.2.analog <= sum2.2.out
